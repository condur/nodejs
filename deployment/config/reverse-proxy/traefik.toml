# traefik.toml

################################################################
# Global configuration
################################################################

# Enable debug mode
#
# Optional
# Default: false
#
#debug = false

# Periodically check if a new version has been released
#
# Optional
# Default: true
#
checkNewVersion = false

# Traefik logs file
# If not defined, logs to stdout
#
# Optional
#
# traefikLogsFile = "/var/log/traefik/traefik.log"

# Log level
#
# Optional
# Default: "ERROR"
# Accepted values, in order of severity: "DEBUG", "INFO", "WARN", "ERROR", "FATAL", "PANIC"
# Messages at and above the selected level will be logged.
#
logLevel = "INFO"

# If set to true invalid SSL certificates are accepted for backends.
# Note: This disables detection of man-in-the-middle attacks so should only be used
# on secure backend networks.
#
# Optional
# Default: false
#
# InsecureSkipVerify = true

# Register Certificates in the RootCA.
#
# Optional
# Default: []
#
RootCAs = [ "/run/secrets/nodejs.root.crt" ]

# Entrypoints to be used by frontends that do not specify any entrypoint.
# Each frontend can specify its own entrypoints.
#
# Optional
# Default: ["http"]
#
defaultEntryPoints = ["http", "https"]

################################################################
# Docker configuration backend
################################################################

# Enable Docker configuration backend
#
# Optional
#
[docker]

# Docker server endpoint. Can be a tcp or a unix socket endpoint.
#
# Required
#
endpoint = "unix:///var/run/docker.sock"

# Default domain used.
# Can be overridden by setting the "traefik.domain" label on a container.
#
# Required
#
domain = "nodejs.dev"

# Enable watch docker changes
#
# Optional
#
watch = true

# Use Swarm Mode services as data provider.
#
# Optional
# Default: false
#
swarmmode = true

# Expose containers by default in traefik
#
# Optional
# Default: true
#
exposedbydefault = false

################################################################
# Entrypoints definition
################################################################

# Optional
# Default:
# [entryPoints]
#   [entryPoints.http]
#   address = ":80"

[entryPoints]
  [entryPoints.http]
  address = ":80"
    [entryPoints.http.redirect]
    entryPoint = "https"

  [entryPoints.https]
  address = ":443"
    [entryPoints.https.tls]
      [[entryPoints.https.tls.certificates]]
      CertFile = "/run/secrets/nodejs.crt"
      KeyFile = "/run/secrets/nodejs.key"

  [entryPoints.dashboard]
  address = ":8080"


# Enable retry sending request if network error
#
# Optional
# DO NOT enable this, it will truncate big files
# [retry]

# Number of attempts
#
# Optional
# Default: (number servers in backend) -1
#
# attempts = 3

################################################################
# Enable API and Dashboard Web UI
################################################################

[api]

# Name of the related entry point
#
# Optional
# Default: "traefik"
#
entryPoint = "dashboard"

# Enabled Dashboard
#
# Optional
# Default: true
#
dashboard = true

# Enable debug mode.
# This will install HTTP handlers to expose Go expvars under /debug/vars and
# pprof profiling data under /debug/pprof.
# Additionally, the log level will be set to DEBUG.
#
# Optional
# Default: false
#
debug = true
